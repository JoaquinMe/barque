#!/bin/bash
# Run full Barque pipeline

# Scripts 04 and 05, which look at the presence of chimeras, are not necessary
# to obtain the final results. It is a good idea however to run them in order to
# validate the absence of chimeras in the reads. The 05 script may demand a very
# high amount of memory and computing time for large files (above one million
# sequences).

# Copy script and config files as they were run
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
SCRIPT=$0
SCRIPT_NAME=$(basename "$SCRIPT")
CONFIG_FILE=$1
CONFIG_FILENAME=$(basename "$CONFIG_FILE")
LOG_FOLDER="99_log_files"

# Import configfile and keep copy in 99_log_files
if [ -e "$CONFIG_FILE" -a -s "$CONFIG_FILE" ]
then
    source "$CONFIG_FILE"
    cp "$CONFIG_FILE" "$LOG_FOLDER"/"$TIMESTAMP"_"$CONFIG_FILENAME"
    cp 02_info/primers.csv "$LOG_FOLDER"/"$TIMESTAMP"_primers.csv
else
    echo -e "\nBARQUE: Config file does not exist or is empty."
    exit 1
fi

# Data preparation
if [ "$SKIP_DATA_PREP" == "0" ]
then
    echo -e "\nBARQUE: Preparing data"

    # Trim and clean reads
    echo -e "\nBARQUE: Trimming and filtering reads"
    ./01_scripts/01_trim.sh "$NCPUS" "$MIN_HIT_LENGTH"

    # Merge forward and reverse reads
    echo -e "\nBARQUE: Merging forward and reverse reads"
    ./01_scripts/02_merge.sh "$NCPUS" "$MIN_OVERLAP" "$MAX_OVERLAP"

    # Split samples by amplicon
    echo -e "\nBARQUE: Splitting samples by amplicon"
    ./01_scripts/03_split_amplicons.sh "$NCPUS"

    # Chimeras
    if [ "$LOOK_FOR_CHIMERA" == "1" ]
    then
        # Regroup amplicons to look for chimeras
        echo -e "\nBARQUE: Regrouping amplicons"
        ./01_scripts/04_regroup_amplicons.sh

        # Look for chimeras
        echo -e "\nBARQUE: Looking for chimeras"
        ./01_scripts/05_chimeras.sh "$NCPUS"
    elif [ "$LOOK_FOR_CHIMERA" == "0" ]
    then
        # Copy files from 07 to 08
        cp -l 07_split_amplicons/*.fastq.gz 08_chimeras/
        echo -e "\nBARQUE: Skipping chimera detection"
    else
        echo -e "\nWARNING: Invalid value in config file for LOOK_FOR_CHIMERA"
    fi

elif [ "$SKIP_DATA_PREP" == "1" ]
then
    echo -e "\nBARQUE: Skipping data preparation"
else
    echo -e "\nWARNING: Invalid value in config file for SKIP_DATA_PREP"
fi

# Run vsearch
echo -e "\nBARQUE: Running vsearch with multiple hits"
./01_scripts/06_vsearch.sh "$SIMILARITY_RESULTS" "$SIMILARITY_VSEARCH" \
    "$MAX_ACCEPTS" "$MAX_REJECTS" "$QUERY_COV" "$NCPUS"

./01_scripts/util/find_multiple_hits.sh

# Summarize results
echo -e "\nBARQUE: Summarizing results"
./01_scripts/07_summarize_results.py 11_vsearch/ 12_summary/ 02_info/primers.csv \
    "$SIMILARITY_RESULTS" "$MIN_HIT_LENGTH" "$MIN_HITS_SAMPLE"

cp 12_summary/*_species_table.csv 15_results

# Looking at sequence dropout
echo -e "\nBARQUE: Looking at sequence dropout"
./01_scripts/08_summarize_read_dropout.sh

# Finding most frequent non-annotated sequences
echo -e "\nBARQUE: Finding most frequent non-annotated sequences"
./01_scripts/09_get_most_frequent_non_annotated_sequences.sh "$NUM_NON_ANNOTATED_SEQ"
